#version: '3.9'
services:
  db:
    container_name: db_tour
    image: mariadb:10.11.6
    #restart: always
    environment:
      - MYSQL_ROOT_PASSWORD = ${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE = ${MYSQL_DATABASE}
      - MYSQL_USER = ${MYSQL_USER}
      - MYSQL_PASSWORD = ${MYSQL_PASSWORD}
      - TZ=Asia/Bangkok
    ports:
      - "9906:3306"
    env_file:
      - ./config/secret.env.dev
    # volumes:
    #   - "./config/db_tour.sql:/docker-entrypoint-initdb.d/1.sql"
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    ports:
      - "8000:80"
    #restart: always
    environment:
      PMA_HOST: db
    depends_on:
      - db
  backend:
    # image: node
    container_name: backend-nodejs-tour
    build: ./backend
    volumes:
      - './backend:/app'
      - '/app/node_modules'
    ports:
      - "8080:8080"
    environment:
      - TZ=Asia/Bangkok
    depends_on:
      - db
  frontend:
    container_name: frontend-reactjs-tour
    build: ./frontend
    volumes:
      - './frontend:/app'
      - '/app/node_modules'
    tty: true
    ports:
      - '3000:3000'
    environment:
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
      - TZ=Asia/Bangkok
    stdin_open: true
    depends_on:
      - db
      - backend

#git command 
#git rm [file.path] // repo and local
#git rm --cached [file.path] // repo only

#git rm -r [file.path] // repo and local all folder
#git rm -r --cached [file.path] // repo only all folder

#git reset --hard [commit_id]
#git log --graph --oneline --decorate

#frontend
#npm init
#npx create-react-app [projectname] || npm install -g create-react-app

#backend
#npm init
#npm i express cors dotenv

#docker ps //check status images
#docker ps
#docker inspect [container_id]

#docker-compose
#docker-compose up --build
#docker-compose down -v
#docker-compose down && docker-compose build --no-cache && docker-compose up